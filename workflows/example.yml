# 
# Example .build.yml file for building and pushing containers to a container repository
# More up to date examples can be found in:
#  - spi-dot-dev/fluidity-random
#

name: fluidity-docker-ci
# Uncomment this section for the action to run
# on:
#  push:
#    branches:
#      - devops
#      - main

env: 
    SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
    SLACK_ICON: 'https://github.com/killgallic.png?size=48'
    SLACK_USERNAME: 'CodeBot'
    
jobs:
  publish-docker:
    runs-on: ubuntu-latest
    name: Publish docker image 
    steps:
      - name: Configure environment
        id: config
        run: |
          VERSION=$(echo $GITHUB_REF | sed -e "s/^refs\/tags\/v//")
          echo ::set-output name=version::$VERSION

      - name: Fetch repository
        uses: actions/checkout@master
        with: 
          token: ${{ secrets.PAT }}

      - name: Slack Notification  # https://github.com/bryannice/gitactions-slack-notification/blob/master/deployment/git-actions/template_slack_notification.yml
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_TITLE: '${{ github.repository }} is building'
          SLACK_MESSAGE: 'Commit: ${{ github.sha }} on ${{ github.ref }} from ${{ github.repository }} '
          SLACK_COLOR: '#BE90D4'
          
      - name: Build & Publish docker
        id: docker
        uses: spi-dot-dev/docker-action@master 
        with: # These are injested as arguments in docker-action/entrypoint.sh
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository }} 
          docker_repository: 'itstilde/fluidity-random'
          registry: registry.hub.docker.com
          pat_string: ${{ secrets.PAT_STRING }}
          tag: ${{ github.ref }}

      - name: Slack Build Result Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_TITLE: '${{github.repository }} build successful'
          SLACK_MESSAGE: 'image: ${{steps.docker.outputs.image}}'
          SLACK_COLOR: '#006442'

